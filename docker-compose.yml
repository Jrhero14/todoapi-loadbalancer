# ./docker-compose.yml

services:
  nginx:
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
    networks:
      - spring-service
    depends_on:
      - spring-app-1
      - spring-app-2
      - spring-app-3

  spring-app-1:
    restart: unless-stopped
    container_name: todoapp1
    build:
      context: ./
      dockerfile: ./Dockerfile
    environment:
      SPRING_HOST: 0.0.0.0
      SPRING_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:mysql://todoapi-mysql-1:3306/tododb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: jeremi12345
    ports:
      - "8080:8080"
    networks:
      - spring-service
    depends_on:
      - mysql

  spring-app-2:
    restart: unless-stopped
    container_name: todoapp2
    build:
      context: ./
      dockerfile: ./Dockerfile
    environment:
      SPRING_HOST: 0.0.0.0
      SPRING_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:mysql://todoapi-mysql-1:3306/tododb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: jeremi12345
    ports:
      - "8081:8080"
    networks:
      - spring-service
    depends_on:
      - mysql

  spring-app-3:
    restart: unless-stopped
    container_name: todoapp3
    build:
      context: ./
      dockerfile: ./Dockerfile
    environment:
      SPRING_HOST: 0.0.0.0
      SPRING_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:mysql://todoapi-mysql-1:3306/tododb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: jeremi12345
    ports:
      - "8082:8080"
    networks:
      - spring-service
    depends_on:
      - mysql

  mysql:
    restart: unless-stopped
    image: mysql:latest
    environment:
      MYSQL_DATABASE: tododb
      MYSQL_ROOT_PASSWORD: jeremi12345
    networks:
      - spring-service
    ports:
      - "3306:3306"

networks:
  spring-service:
    driver: bridge
